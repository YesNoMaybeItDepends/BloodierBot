//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BloodierBot.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BloodierBot.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Bets
        ///WHERE UserId = @UserId AND MatchId = @MatchId.
        /// </summary>
        public static string deleteBet {
            get {
                return ResourceManager.GetString("deleteBet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM RunningGames AS games
        ///WHERE games.Id = @RunningGameId;.
        /// </summary>
        public static string DeleteRunningGame {
            get {
                return ResourceManager.GetString("DeleteRunningGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM RunningGameTeams AS teams
        ///WHERE teams.RunningGameId = @RunningGameId.
        /// </summary>
        public static string DeleteRunningGameTeams {
            get {
                return ResourceManager.GetString("DeleteRunningGameTeams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Teams
        ///WHERE TeamId IN (
        ///	SELECT TeamId
        ///	FROM ScheduledMatchTeams
        ///	WHERE ScheduledMatchId = @Id
        ///);
        ///
        ///DELETE FROM ScheduledMatchTeams
        ///WHERE ScheduledMatchId = @Id;
        ///
        ///DELETE FROM ScheduledGames
        ///WHERE Id = @Id;.
        /// </summary>
        public static string deleteScheduledMatch {
            get {
                return ResourceManager.GetString("deleteScheduledMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM Users
        ///WHERE Id = @Id.
        /// </summary>
        public static string deleteUser {
            get {
                return ResourceManager.GetString("deleteUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///games.Id AS RunningGame_Id,
        ///games.Half AS half,
        ///games.Turn AS turn,
        ///games.Division as division,
        ///games.RunningGameTournamentId as &quot;RunningGameTournament_Id&quot;,
        ///tourneys.GroupId as &quot;group&quot;,
        ///teams.Id as RunningGameTeam_Id,
        ///teams.Side as side,
        ///teams.Name as name,
        ///teams.Coach as coach,
        ///teams.Race as race,
        ///teams.Tv as tv,
        ///teams.Rating as rating,
        ///teams.Score as score,
        ///teams.Logo as logo,
        ///teams.LogoLarge as logolarge
        ///FROM RunningGames AS games
        ///INNER JOIN RunningGameTeams AS teams ON (teams.R [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GetRunningGamesFromDatabase {
            get {
                return ResourceManager.GetString("GetRunningGamesFromDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First register yourself with !register. After registering you&apos;ll be given 100★ with which you can bet on any of the scheduled games. You can see what games are scheduled with the command !matches. You may bet on a match up until it starts, the moment it starts bets will be locked.
        ///
        ///You can either bet on the outcome of a game or the score. The outcome of a game is what team wins it, or if it&apos;s a tie. Outcome can either be A, B, or T. A is team A winning. B is team B winning. T is a tie. The score is the fi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string HowIsBetFormed {
            get {
                return ResourceManager.GetString("HowIsBetFormed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Payouts are made proportionally. For example, if you wager $1 on outcome A and the total pot for outcome A 1 is $4, your proportion is 25%. This means that you are entitled to 25% of the outcome B+T pot, assuming that outcome A wins. Your proportion of the payout is calculated as follows: (Your bet/Total amount bet on the outcome). If you guess the score right, then your 25% of the outcome B+T pot is doubled..
        /// </summary>
        public static string HowIsPayoutCalculated {
            get {
                return ResourceManager.GetString("HowIsPayoutCalculated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When a match finishes, winners and losers are resolved through their bet outcome. Those who got the outcome right win, and those who didn&apos;t, lose. The winners who bet on the right score have the money corresponding to their % of the pot doubled. 
        ///If there were winners but there were no losers, all the money is refunded..
        /// </summary>
        public static string HowIsWinnerBorn {
            get {
                return ResourceManager.GetString("HowIsWinnerBorn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO Bets
        ///(UserId, MatchId, AteamScore, BteamScore, Money)
        ///VALUES
        ///(@UserId, @MatchId, @AteamScore, @BteamScore, @Money)
        ///ON CONFLICT (UserId, MatchId) DO UPDATE SET 
        ///UserId = excluded.UserId, 
        ///MatchId = excluded.MatchId, 
        ///AteamScore = excluded.AteamScore,
        ///BteamScore = excluded.BteamScore,
        ///Money = excluded.Money;
        ///.
        /// </summary>
        public static string insertOrUpdateBet {
            get {
                return ResourceManager.GetString("insertOrUpdateBet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT or IGNORE INTO 
        ///RunningGames 
        ///(Id, Half, Turn, Division, TournamentId) 
        ///values 
        ///(@Id, @Half, @Turn, @Division, @TournamentId).
        /// </summary>
        public static string insertRunningGame {
            get {
                return ResourceManager.GetString("insertRunningGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT or IGNORE INTO 
        ///RunningGameTeams 
        ///(Id, RunningGameId, Side, Name, Coach, Race, Tv, Rating, Score, Logo, LogoLarge)
        ///values 
        ///(@Id, @RunningGameId, @Side, @Name, @Coach, @Race, @Tv, @Rating, @Score, @Logo, @LogoLarge).
        /// </summary>
        public static string insertRunningGameTeam {
            get {
                return ResourceManager.GetString("insertRunningGameTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT OR IGNORE INTO ScheduledGames
        ///(Id, TournamentId)
        ///values
        ///(@Id, @TournamentId).
        /// </summary>
        public static string insertScheduledMatch {
            get {
                return ResourceManager.GetString("insertScheduledMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT OR IGNORE INTO ScheduledMatchTeams
        ///(ScheduledMatchId, TeamId, AorB)
        ///VALUES
        ///(@ScheduledMatchId, @TeamId, @AorB) 
        ///.
        /// </summary>
        public static string insertScheduledMatchTeams {
            get {
                return ResourceManager.GetString("insertScheduledMatchTeams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT OR IGNORE INTO Teams
        ///(TeamId, Name)
        ///values
        ///(@TeamId, @Name).
        /// </summary>
        public static string insertTeam {
            get {
                return ResourceManager.GetString("insertTeam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT OR IGNORE INTO Tournaments
        ///(Id, Name)
        ///values
        ///(@Id, @Name).
        /// </summary>
        public static string insertTournament {
            get {
                return ResourceManager.GetString("insertTournament", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT OR IGNORE INTO Users
        ///(Id, Name, Money)
        ///VALUES
        ///(@Id, @Name, 100).
        /// </summary>
        public static string insertUser {
            get {
                return ResourceManager.GetString("insertUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM Tournaments.
        /// </summary>
        public static string selectAllTournaments {
            get {
                return ResourceManager.GetString("selectAllTournaments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM Bets
        ///WHERE UserId = @UserId AND MatchId = @MatchId.
        /// </summary>
        public static string selectBet {
            get {
                return ResourceManager.GetString("selectBet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM Bets WHERE UserId = @UserId;.
        /// </summary>
        public static string selectBets {
            get {
                return ResourceManager.GetString("selectBets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM Bets
        ///WHERE MatchId = @MatchId
        ///AND AteamScore &gt; BteamScore.
        /// </summary>
        public static string selectBetsA {
            get {
                return ResourceManager.GetString("selectBetsA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM Bets
        ///WHERE MatchId = @MatchId
        ///AND BteamScore &gt; AteamScore.
        /// </summary>
        public static string selectBetsB {
            get {
                return ResourceManager.GetString("selectBetsB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM Bets
        ///WHERE MatchId = @MatchId
        ///AND AteamScore = BteamScore.
        /// </summary>
        public static string selectBetsT {
            get {
                return ResourceManager.GetString("selectBetsT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT Money
        ///FROM Users
        ///WHERE Id = @Id.
        /// </summary>
        public static string selectMoneyFromUser {
            get {
                return ResourceManager.GetString("selectMoneyFromUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT rg.Id
        ///FROM RunningGames as rg
        ///INNER JOIN RunningGameTeams as rgt ON rgt.RunningGameId = rg.Id
        ///INNER JOIN ScheduledMatchTeams as smt ON smt.TeamId = rgt.Id
        ///WHERE smt.TeamId = @Team1 
        ///
        ///INTERSECT 
        ///
        ///SELECT rg.Id
        ///FROM RunningGames as rg
        ///INNER JOIN RunningGameTeams as rgt ON rgt.RunningGameId = rg.Id
        ///INNER JOIN ScheduledMatchTeams as smt ON smt.TeamId = rgt.Id
        ///AND smt.TeamId = @Team2.
        /// </summary>
        public static string selectRunningGameFromScheduledTeams {
            get {
                return ResourceManager.GetString("selectRunningGameFromScheduledTeams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///games.Id AS RunningGame_Id,
        ///games.Half AS half,
        ///games.Turn AS turn,
        ///games.Division as division,
        ///games.TournamentId as Tournament_Id,
        ///tourneys.Name as t_name,
        ///teams.Id as RunningGameTeam_Id,
        ///teams.Side as side,
        ///teams.Name as name,
        ///teams.Coach as coach,
        ///teams.Race as race,
        ///teams.Tv as tv,
        ///teams.Rating as rating,
        ///teams.Score as score,
        ///teams.Logo as logo,
        ///teams.LogoLarge as logolarge
        ///FROM RunningGames AS games
        ///INNER JOIN RunningGameTeams AS teams ON (teams.RunningGameId = games.Id) 
        ///L [rest of string was truncated]&quot;;.
        /// </summary>
        public static string selectRunningGames {
            get {
                return ResourceManager.GetString("selectRunningGames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM ScheduledGames as sg
        ///INNER JOIN ScheduledMatchTeams as smt on smt.ScheduledMatchId = sg.Id
        ///INNER JOIN Teams as t on t.TeamId = smt.TeamId
        ///WHERE sg.Id = @Id.
        /// </summary>
        public static string selectScheduledGame {
            get {
                return ResourceManager.GetString("selectScheduledGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///games.Id AS RunningGame_Id,
        ///games.Half AS half,
        ///games.Turn AS turn,
        ///games.Division as division,
        ///games.RunningGameTournamentId as Tournament_Id,
        ///tourneys.GroupId as &quot;group&quot;,
        ///teams.Id as RunningGameTeam_Id,
        ///teams.Side as side,
        ///teams.Name as name,
        ///teams.Coach as coach,
        ///teams.Race as race,
        ///teams.Rating as score,
        ///teams.Logo as logo
        ///FROM RunningGames AS games
        ///INNER JOIN RunningGameTeams AS teams ON (teams.RunningGameId = games.Id) 
        ///LEFT OUTER JOIN RunningGameTournaments AS tourneys ON (tou [rest of string was truncated]&quot;;.
        /// </summary>
        public static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Users
        ///Set Money = Money + @Money
        ///WHERE Id = @Id.
        /// </summary>
        public static string updateUserMoney {
            get {
                return ResourceManager.GetString("updateUserMoney", resourceCulture);
            }
        }
    }
}
